//===-- llvm/Target/StackTransformTypes.def - Generator Opcodes -*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// Macros which define the set of available instructions for the ISA-agnostic
// value generator.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_CODEGEN_STACKTRANSFORMTYPES_DEF
#define LLVM_CODEGEN_STACKTRANSFORMTYPES_DEF

// TODO generate using TableGen rather than X macros

// Each instruction is defined as a mnemonic and a boolean defining if it's a
// pseudo-instruction (which must be converted to normal instructions after
// register & stack slot rewriting).
#define VALUE_GEN_INST \
  X(Set, false) /* Set the generated value to another value */ \
  X(Add, false) /* Add a value to the generated value */ \
  X(Subtract, false) /* Subtract a value from the generated value */ \
  X(Multiply, false) /* Multiply the generated value by another value */ \
  X(Divide, false) /* Divide the generated value by another value */ \
  X(LeftShift, false) /* Left-shift the generated value */ \
  X(RightShiftLog, false) /* Right-shift (logical) the generated value */ \
  X(RightShiftArith, false) /* Right-shift (arithmetic) the generated value */ \
  X(Mask, false) /* Apply bit mask */ \
  X(StackSlot, true) /* Generate stack slot reference */ \
  X(ConstantPool, true) /* Generate a constant pool entry reference */

#endif

